@use '../mixins';
@use '../theme';

// ----------------------------------------------------------------------------------------------------
// Page dimensions

$-base-x: 4;
$-base-y: 3;
$-base-ratio: $-base-x / $-base-y;
$-base-ratio-string: "#{$-base-x} / #{$-base-y}";

$-portrait-x: 8;
$-portrait-y: 10;
$-portrait-ratio: $-portrait-x / $-portrait-y;
$-portrait-ratio-string: "#{$-portrait-x} / #{$-portrait-y}";
$-portrait-scaling: $-base-ratio * ($-portrait-y / $-portrait-x);

$-narrow-x: 6;
$-narrow-y: 10;
$-narrow-ratio: $-narrow-x / $-narrow-y;
$-narrow-ratio-string: "#{$-narrow-x} / #{$-narrow-y}";


// ----------------------------------------------------------------------------------------------------
// Image dimensions

$-base-width: 2304px;
$-base-height: 1728px;

$-android-arm-width: 219px;
$-android-arm-height: 501px;
$-android-arm-translate-x: 247%;
$-android-arm-translate-y: -18%;
$-android-arm-translate: translate($-android-arm-translate-x, $-android-arm-translate-y);

$-person-arm-width: 168px;
$-person-arm-height: 122px;
$-person-arm-translate-x: -82%;
$-person-arm-translate-y: -78%;


// ----------------------------------------------------------------------------------------------------
// Base layout

#header-io {
    @include mixins.layout-stack;

    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;

    @media (max-aspect-ratio: $-portrait-ratio-string) {
        & {
            height: 100vw / $-portrait-ratio;
        }
    }
}

#header-io-base {
    width: 100%;
    height: auto;
    user-select: none;

    @media (max-aspect-ratio: $-base-ratio-string) {
        & {
            width: auto;
            height: 100%;
        }
    }

    @media (max-aspect-ratio: $-portrait-ratio-string) {
        & {
            width: percentage($-portrait-scaling);
            height: auto;
        }
    }
}


// ----------------------------------------------------------------------------------------------------
// Android arm

@keyframes keyframes-android-arm-wave {
    from {
        transform: $-android-arm-translate rotate(0deg);
    }

    10% {
        transform: $-android-arm-translate rotate(-225deg);
    }

    20% {
        transform: $-android-arm-translate rotate(-135deg);
    }

    30% {
        transform: $-android-arm-translate rotate(-225deg);
    }

    40% {
        transform: $-android-arm-translate rotate(0deg);
    }

    to {
        transform: $-android-arm-translate rotate(0deg);
    }
}

#header-io-android-arm {
    width: percentage($-android-arm-width / $-base-width);
    height: auto;
    transform: $-android-arm-translate;
    transform-origin: 50% 10%;
    user-select: none;
    pointer-events: none;
    animation: keyframes-android-arm-wave 5s ease-in-out #{theme.$animations-initial-delay}s infinite;

    @media (max-aspect-ratio: $-base-ratio-string) {
        & {
            width: auto;
            height: percentage($-android-arm-height / $-base-height);
        }
    }

    @media (max-aspect-ratio: $-portrait-ratio-string) {
        & {
            width: percentage($-android-arm-width / $-base-width * $-portrait-scaling);
            height: auto;
        }
    }

    @media (prefers-reduced-motion: reduce) {
        animation: none !important;
    }
}


// ----------------------------------------------------------------------------------------------------
// Person arm

#header-io-person-arm {
    width: percentage($-person-arm-width / $-base-width);
    height: auto;
    transform: translate($-person-arm-translate-x, $-person-arm-translate-y);
    user-select: none;
    pointer-events: none;

    @media (max-aspect-ratio: $-base-ratio-string) {
        & {
            width: auto;
            height: percentage($-person-arm-height / $-base-height);
        }
    }

    @media (max-aspect-ratio: $-portrait-ratio-string) {
        & {
            width: percentage($-person-arm-width / $-base-width * $-portrait-scaling);
            height: auto;
        }
    }
}


// ----------------------------------------------------------------------------------------------------
// Android body

$-android-body-line-lengths: (
    1: 10,
    2: 13,
    3: 8,
    4: 8,
    5: 21,
    6: 17,
    7: 12
);
$-typewriter-char-duration: 0.04;

#header-io-android-body {
    font-size: 1.7vw;
    width: 13em;
    height: auto;
    transform: translate(24.5%, -7%) skew(359deg, 1deg);
    padding: 1em;
    background-color: var(--color-background-image);
    border-radius: 2em;
    margin: 0;
    overflow: hidden;
    display: flex;
    justify-content: space-between;
    flex-direction: column;

    > * {
        margin: 0;
        overflow: hidden;
        border-right: 0.2ch solid transparent; // Text cursor
    }

    h1 {
        font-size: 2em;
        margin-bottom: 1em;
    }

    span {
        > b {
            color: var(--color-accent);
        }
    }

    @media (max-aspect-ratio: $-base-ratio-string) {
        & {
            font-size: 1.7vh * $-base-ratio;
        }
    }

    @media (max-aspect-ratio: $-portrait-ratio-string) {
        & {
            font-size: 1.7vw * $-portrait-scaling;
        }
    }
}

@keyframes border-text-full {
    from {
        border-color: var(--color-background-text);
    }

    to {
        border-color: var(--color-background-text);
    }
}

@keyframes border-text-blink {
    from {
        border-color: var(--color-background-text);
    }

    50% {
        border-color: transparent;
    }

    to {
        border-color: var(--color-background-text);
    }
}

@mixin generate-keyframes-typewriter($chars-count) {
    @keyframes keyframes-typewriter-#{$chars-count} {
        from {
            width: 0ch;
        }
    
        to {
            width: #{$chars-count}ch;
        }
    }
}

// Generate only necessary keyframes
$-generated-keyframes-typewriter: ();
@each $line-number, $line-length in $-android-body-line-lengths {
    @if map-get($-generated-keyframes-typewriter, $line-length) == null {
        $-generated-keyframes-typewriter: map-merge($-generated-keyframes-typewriter, ($line-length: true));
        @include generate-keyframes-typewriter($line-length);
    }
}

$-typewriter-total-duration: theme.$animations-initial-delay;
@each $line-number, $line-length in $-android-body-line-lengths {
    $line-duration: $line-length * $-typewriter-char-duration;

    $animations: ();
    @if $line-number < length($-android-body-line-lengths) {
        $animations: (
            keyframes-typewriter-#{$line-length} #{$line-duration}s steps(#{$line-length}) #{$-typewriter-total-duration}s 1 normal backwards,
            border-text-full #{$line-duration}s step-start #{$-typewriter-total-duration}s 1 normal none
        );
    } @else {
        $animations: (
            keyframes-typewriter-#{$line-length} #{$line-duration}s steps(#{$line-length}) #{$-typewriter-total-duration}s 1 normal both,
            border-text-full #{$line-duration}s step-start #{$-typewriter-total-duration}s 1 normal none,
            border-text-blink 0.5s step-end #{$-typewriter-total-duration + $line-duration}s infinite alternate
        );
    }

    #header-io-android-body > *:nth-child(#{$line-number}) {
        animation: $animations;
    }

    $-typewriter-total-duration: $-typewriter-total-duration + $line-duration;
}

@media (prefers-reduced-motion: reduce) {
    #header-io-android-body > * {
        animation: none !important;
    }
}
