@use '../../node_modules/normalize.css/normalize.css';
@use 'common';
@use 'animations';

$initial-animation-delay-seconds: 2;

// Header dimensions

$io2019-base-width: 2304px;
$io2019-base-height: 1728px;
$io2019-base-x: 4;
$io2019-base-y: 3;

$io2019-android-arm-width: 219px;
$io2019-android-arm-height: 501px;
$io2019-android-arm-translate-x: 247%;
$io2019-android-arm-translate-y: -18%;

$io2019-person-arm-width: 168px;
$io2019-person-arm-height: 122px;
$io2019-person-arm-translate-x: -82%;
$io2019-person-arm-translate-y: -78%;


// Page dimensions

$page-base-x: $io2019-base-x;
$page-base-y: $io2019-base-y;
$page-base-ratio: $page-base-x / $page-base-y;
$page-base-ratio-string: "#{$page-base-x} / #{$page-base-y}";

$page-portrait-x: 8;
$page-portrait-y: 10;
$page-portrait-ratio: $page-portrait-x / $page-portrait-y;
$page-portrait-ratio-string: "#{$page-portrait-x} / #{$page-portrait-y}";
$page-portrait-scaling: $page-base-ratio * ($page-portrait-y / $page-portrait-x);

$page-narrow-x: 6;
$page-narrow-y: 10;
$page-narrow-ratio: $page-narrow-x / $page-narrow-y;
$page-narrow-ratio-string: "#{$page-narrow-x} / #{$page-narrow-y}";


html {
    // Basic styling
    font-family: sans-serif;
    
    // Colors
    --color-background: #e1e4e1;
    --color-background-inverse: #000000;
    --color-background-hover: #00000020;

    @media (prefers-color-scheme: dark) {
        & {
            --color-background: #000000;
            --color-background-inverse: #ffffff;
            --color-background-hover: #00000020;
        }
    }

    // Font styling
    font-size: 1.7vw;

    @media (max-aspect-ratio: $page-base-ratio-string) {
        & {
            font-size: 1.7vh * $page-base-ratio;
        }
    }

    @media (max-aspect-ratio: $page-portrait-ratio-string) {
        & {
            font-size: 1.7vw * $page-portrait-scaling;
        }
    }
}

body {
    background-color: var(--color-background);
    color: var(--color-background-inverse);
}

#io2019 {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;

    @media (max-aspect-ratio: $page-portrait-ratio-string) {
        & {
            height: 100vw / $page-portrait-ratio;
        }
    }
}

#io2019-base {
    width: 100%;
    height: auto;
    user-select: none;

    @media (max-aspect-ratio: $page-base-ratio-string) {
        & {
            width: auto;
            height: 100%;
        }
    }

    @media (max-aspect-ratio: $page-portrait-ratio-string) {
        & {
            width: percentage($page-portrait-scaling);
            height: auto;
        }
    }
}

$io2019-android-arm-translate: translate($io2019-android-arm-translate-x, $io2019-android-arm-translate-y);

@keyframes keyframes-android-arm-wave {
    from {
        transform: $io2019-android-arm-translate rotate(0deg);
    }

    10% {
        transform: $io2019-android-arm-translate rotate(-225deg);
    }

    20% {
        transform: $io2019-android-arm-translate rotate(-135deg);
    }

    30% {
        transform: $io2019-android-arm-translate rotate(-225deg);
    }

    40% {
        transform: $io2019-android-arm-translate rotate(0deg);
    }

    to {
        transform: $io2019-android-arm-translate rotate(0deg);
    }
}

#io2019-android-arm {
    width: percentage($io2019-android-arm-width / $io2019-base-width);
    height: auto;
    transform: $io2019-android-arm-translate;
    transform-origin: 50% 10%;
    user-select: none;
    pointer-events: none;
    animation: keyframes-android-arm-wave 5s ease-in-out #{$initial-animation-delay-seconds}s infinite;

    @media (max-aspect-ratio: $page-base-ratio-string) {
        & {
            width: auto;
            height: percentage($io2019-android-arm-height / $io2019-base-height);
        }
    }

    @media (max-aspect-ratio: $page-portrait-ratio-string) {
        & {
            width: percentage($io2019-android-arm-width / $io2019-base-width * $page-portrait-scaling);
            height: auto;
        }
    }
}

#io2019-person-arm {
    width: percentage($io2019-person-arm-width / $io2019-base-width);
    height: auto;
    transform: translate($io2019-person-arm-translate-x, $io2019-person-arm-translate-y);
    user-select: none;
    pointer-events: none;

    @media (max-aspect-ratio: $page-base-ratio-string) {
        & {
            width: auto;
            height: percentage($io2019-person-arm-height / $io2019-base-height);
        }
    }

    @media (max-aspect-ratio: $page-portrait-ratio-string) {
        & {
            width: percentage($io2019-person-arm-width / $io2019-base-width * $page-portrait-scaling);
            height: auto;
        }
    }
}

#io2019-content {
    width: 13rem;
    height: auto;
    transform: translate(24.5%, -7%) skew(359deg, 1deg);
    padding: 1rem;
    background-color: rgba(255, 255, 255, 0.5);
    border-radius: 2rem;
    margin: 0;
    overflow: hidden;
    display: flex;
    justify-content: space-between;
    flex-direction: column;

    > * {
        margin: 0;
        overflow: hidden;
        border-right: 0.2ch solid transparent; // Cursor
    }

    h1 {
        font-size: 2rem;
        margin-bottom: 1rem;
    }

    span {
        > b {
            color: #8af78a;
        }
    }
}

$duration-per-char-seconds: 0.05;
$io2019-content-line-lengths: (
    1: 10,
    2: 13,
    3: 8,
    4: 8,
    5: 21,
    6: 17,
    7: 11
);

@mixin generate-keyframes-typewriter($chars-count) {
    @keyframes keyframes-typewriter-#{$chars-count} {
        from {
            width: 0ch;
        }
    
        to {
            width: #{$chars-count}ch;
        }
    }
}

$generated-keyframes-typewriter: ();
@each $line-number, $line-length in $io2019-content-line-lengths {
    @if map-get($generated-keyframes-typewriter, $line-length) == null {
        $generated-keyframes-typewriter: map-merge($generated-keyframes-typewriter, ($line-length: true));
        @include generate-keyframes-typewriter($line-length);
    }
}

$total-duration-seconds: $initial-animation-delay-seconds;
@each $line-number, $line-length in $io2019-content-line-lengths {
    $line-duration-seconds: $line-length * $duration-per-char-seconds;

    $animations: (
        keyframes-typewriter-#{$line-length} #{$line-duration-seconds}s steps(#{$line-length}) #{$total-duration-seconds}s 1 normal both,
        border-black-full #{$line-duration-seconds}s steps(1) #{$total-duration-seconds}s 1 normal none
    );

    @if $line-number == length($io2019-content-line-lengths) {
        $end-cursor-animation: border-black-blink 0.5s step-end #{$total-duration-seconds + $line-duration-seconds}s infinite alternate;
        $animations: append($animations, $end-cursor-animation)
    }

    #io2019-content > *:nth-child(#{$line-number}) {
        animation: $animations;
    }

    $total-duration-seconds: $total-duration-seconds + $line-duration-seconds;
}

#logo-container {
    display: flex;
    flex-direction: row;
    justify-content: center;

    > ul {
        max-width: 30rem;
        margin: 0;
        padding: 1rem;
        list-style-type: none;

        > li + li {
            margin-top: 1rem;
        }
    }

    a {
        display: block;
        padding: 0.5rem;
        color: inherit;
        text-decoration: inherit;

        &:hover, &:focus {
            background-color: var(--color-background-hover);
        }

        figure {
            margin: 0;
            display: flex;
            flex-direction: column;
            align-items: center;

            figcaption + img {
                margin-top: 0.25rem;
            }
        }
    }
}

#copyright {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0.5rem;
    background-color: var(--color-background-inverse);
    color: var(--color-background);
}
